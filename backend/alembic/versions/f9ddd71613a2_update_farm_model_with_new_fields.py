"""update_farm_model_with_new_fields

Revision ID: f9ddd71613a2
Revises: 627ed8f3eed4
Create Date: 2025-06-26 09:45:53.707302

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = 'f9ddd71613a2'
down_revision: Union[str, Sequence[str], None] = '627ed8f3eed4'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('farms', sa.Column('farm_code', sa.String(length=50), nullable=False))
    op.add_column('farms', sa.Column('total_area', sa.Float(), nullable=False))
    op.add_column('farms', sa.Column('farm_owner_name', sa.String(length=255), nullable=False))
    op.add_column('farms', sa.Column('deleted', sa.Boolean(), nullable=False))
    op.alter_column('farms', 'description',
               existing_type=mysql.VARCHAR(length=255),
               type_=sa.String(length=500),
               existing_nullable=True)
    op.create_unique_constraint('uq_tenant_farm_code', 'farms', ['tenant_id', 'farm_code'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('uq_tenant_farm_code', 'farms', type_='unique')
    op.alter_column('farms', 'description',
               existing_type=sa.String(length=500),
               type_=mysql.VARCHAR(length=255),
               existing_nullable=True)
    op.drop_column('farms', 'deleted')
    op.drop_column('farms', 'farm_owner_name')
    op.drop_column('farms', 'total_area')
    op.drop_column('farms', 'farm_code')
    # ### end Alembic commands ###
